# Template file for 'kodi'
pkgname=kodi
version=18.0b1
revision=2
build_style=cmake
configure_args="-DENABLE_INTERNAL_CROSSGUID=OFF"
patch_args="-Np1"
_codename="Leia"
wrksrc="xbmc-${version}v${revision}-${_codename}"
short_desc="A software media player and entertainment hub for digital media"
maintainer="Juan RP <xtraeme@voidlinux.eu>"
homepage="http://www.kodi.tv/"
license="GPL-2"
distfiles="https://github.com/xbmc/xbmc/archive/${version}v${revision}-${_codename}.tar.gz"
checksum=3808aa97723b710a0774261116e3387f091bc3d8150b9ba49ef36cb30b3d7ba2

lib32disabled=yes
only_for_archs="i686 i686-musl x86_64 x86_64-musl"

hostmakedepends="
 automake libtool pkg-config gperf cmake zip unzip nasm yasm python-devel
 gettext-devel libltdl-devel curl"
makedepends="
 eudev-libudev-devel pcre-devel expat-devel libpng-devel libjpeg-turbo-devel
 libXrandr-devel avahi-libs-devel pulseaudio-devel samba-devel tiff-devel
 libmysqlclient-devel libmpeg2-devel wavpack-devel zlib-devel lzo-devel
 libXmu-devel glew-devel fribidi-devel sqlite-devel libcdio-devel freetype-devel
 jasper-devel faac-devel SDL2_image-devel faad2-devel libmodplug-devel libressl-devel
 libmad-devel fontconfig-devel libXinerama-devel libsamplerate-devel libmms-devel
 enca-devel boost-devel libcurl-devel libva-devel libvdpau-devel libass-devel
 libbluetooth-devel yajl-devel libplist-devel librtmp-devel tinyxml-devel
 taglib-devel libcap-devel lame-devel libbluray-devel libnfs-devel ffmpeg-devel
 giflib-devel libxslt-devel gnutls-devel libssh-devel libmicrohttpd-devel
 libcec-devel dcadec-devel crossguid lirc fstrcmp rapidjson flatbuffers"

# The following dependencies are dlopen(3)ed.
depends="libbluray libmad libvorbis libcurl libflac libmodplug libass libmpeg2
 lame librtmp libnfs>=1.9.7 libplist>=1.12"
depends+=" glxinfo hicolor-icon-theme desktop-file-utils xdpyinfo"

# musl builds need generated addons (no java).
# gold broken with musl
case "$XBPS_MACHINE" in
	*-musl) _kodi_nojava=yes; configure_args+=" -DENABLE_LDGOLD=Off";;
	*) hostmakedepends+=" swig openjdk-jre";;
esac

pre_configure() {
	# Copy generated files to avoid requiring java.
	if [ -n "${_kodi_nojava}" ]; then
		mkdir -p build/build/swig

		# THESE FILES MUST BE UPDATED WITH EVERY VERSION BUMP!
		cp -r $FILESDIR/swig.nojava-$version/* -t build/build/swig
		cp $FILESDIR/CMakeCache.txt.nojava build/CMakeCache.txt

		echo "set(FOUND_SWIG Yes)" > modules/FindSWIG.cmake
	else
		. /etc/profile.d/10_openjdk.sh
	fi
    
    [[ -d kodi-build ]] && rm -rf kodi-build
    mkdir kodi-build
}

do_configure() {
    make -C tools/depends/target/libfmt PREFIX=/usr/local

    cd ${wrksrc}/kodi-build
    cmake .. \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_INSTALL_LIBDIR=/usr/lib \
        -DENABLE_EVENTCLIENTS=ON \
        -DLIRC_DEVICE=/run/lirc/lircd \
        -DENABLE_INTERNAL_FFMPEG="no" \
        -DWITH_FFMPEG="yes"
}

do_build() {
    cd ${wrksrc}/kodi-build
    cmake --build . -- VERBOSE=1 -j$(getconf _NPROCESSORS_ONLN)
}

do_install() {
    _components=('kodi' 'kodi-bin')

    cd ${wrksrc}/kodi-build
    for _cmp in ${_components[@]}; do
        DESTDIR=${DESTDIR} cmake \
        -DCMAKE_INSTALL_COMPONENT="$_cmp" \
        -P cmake_install.cmake
    done
}
